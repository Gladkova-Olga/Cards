{"version":3,"sources":["components/header/Header.module.css","components/test/Test.module.css","components/common/checkBox/CheckBox.module.css","components/login/Login.module.css","components/profile/Profile.module.css","components/signUp/SignUp.module.css","components/common/button/Button.module.css","components/common/input/Input.module.css","components/error404/Error404.module.css","dal/api.ts","bll/enterNewPasswordReducer.ts","components/enterNewPassword/EnterNewPassword.tsx","bll/loginReducer.ts","components/login/Login.tsx","components/profile/Profile.tsx","bll/signUpReducer.ts","components/signUp/SignUp.tsx","bll/restorePasswordReducer.ts","components/restorePassword/RestorePassword.tsx","components/common/button/Button.tsx","components/common/input/Input.tsx","components/common/checkBox/CheckBox.tsx","components/test/Test.tsx","components/error404/Error404.tsx","components/routes/Routes.tsx","components/header/Header.tsx","bll/profileReducer.ts","bll/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","payload","post","delete","from","message","resetPasswordToken","initialState","isRequestSuccess","isButtonDisabled","completeRequest","type","setButtonDisabled","EnterNewPassword","dispatch","useDispatch","useSelector","state","enterNewPassword","token","useParams","formik","useFormik","initialValues","validate","values","errors","length","onSubmit","a","error","response","data","console","log","setNewPassword","resetForm","to","handleSubmit","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","disabled","isLoggedIn","setIsLoggedIn","Login","login","test","then","res","catch","e","className","style","loginBlock","PATH","SIGN_UP","RESTORE_PASSWORD","Profile","ProfileBlock","isSignedUp","signUpSuccess","SignUp","signUp","finally","signUpContainer","RestorePassword","restorePassword","Button","props","button","onClick","buttonName","Input","input","inputName","CheckBox","checkBox","label","htmlFor","checkBoxLabel","Test","testBlock","item","Error404","error404Page","ENTER_NEW_PASSWORD","LOGIN","PROFILE","TEST","Routes","path","exact","render","Header","useHistory","headerBlock","nav","activeClassName","activeLink","reducers","combineReducers","action","profile","store","createStore","applyMiddleware","thunkMiddleware","window","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23dce9f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBlock\":\"Header_headerBlock__YljZf\",\"nav\":\"Header_nav__2XAZr\",\"item\":\"Header_item__1dgwQ\",\"activeLink\":\"Header_activeLink__22_Er\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testBlock\":\"Test_testBlock__2Vc-O\",\"item\":\"Test_item__1Be39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkBox\":\"CheckBox_checkBox__agmcP\",\"label\":\"CheckBox_label__3d5y2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__3Z06R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileBlock\":\"Profile_ProfileBlock__15s09\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signUpContainer\":\"SignUp_signUpContainer__QZJl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1il23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1THl5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404Page\":\"Error404_error404Page__j9Ar2\"};","import axios, {AxiosResponse} from \"axios\"\n\nconst instance = axios.create({\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\n    // baseURL: \"http://localhost:7542/2.0/\",\n    withCredentials: true\n})\n\ntype UserDataType = {\n    _id: string,\n    email: string,\n    isAdmin: boolean,\n    name: string,\n    publicCardPacksCount: number,\n    rememberMe: boolean,\n    avatar?: string\n}\n\nexport const authAPI = {\n    login(email: string, password: string, rememberMe: boolean) {\n        const payload = {\n            email,\n            password,\n            rememberMe\n        };\n        return (\n            instance.post<typeof payload, AxiosResponse<UserDataType>>(\"auth/login\", payload)\n        )\n    },\n    signUp(email: string, password: string) {\n        const payload = {\n            email,\n            password\n        };\n        return (\n            instance.post<typeof payload, AxiosResponse<any>>('auth/register', payload)\n        )\n\n},\n    logout(){\n        return instance.delete<{}, AxiosResponse<any>>('/auth/me')\n    },\n    restorePassword(email: string) {\n        const payload = {\n            email,\n            from:  \"test-front-admin <olga_gladkova@tut.by>\",\n            message: `<div style=\"background-color: #a3c486; padding: 10px\">\n                        password recovery link: \n                        <a href='https://Gladkova-Olga.github.io/Cards/#/enter-new-password/$token$'>\n                        link gh-pages</a></div>`\n        }\n        return instance.post<typeof payload, AxiosResponse<any>>('/auth/forgot', payload)\n    },\n  setNewPassword(password: string, resetPasswordToken: string) {\n        const payload = {\n            password,\n            resetPasswordToken\n        }\n        return instance.post<typeof payload, AxiosResponse<any> >('/auth/set-new-password', payload)\n  },\n\n\n}","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../dal/api\";\n\ntype InitialStateType = typeof initialState;\ntype ThunkDispatch = Dispatch<ActionsNewPasswordType>\n\ntype CompleteRequestType = ReturnType<typeof completeRequest>\ntype SetButtonDisabled = ReturnType<typeof setButtonDisabled>\ntype ActionsNewPasswordType = CompleteRequestType | SetButtonDisabled\n\nconst initialState = {\n    isRequestSuccess: false,\n    isButtonDisabled: false\n};\n\nexport const enterNewPasswordReducer = (state: InitialStateType = initialState, action: ActionsNewPasswordType): InitialStateType =>{\n    switch (action.type) {\n        case \"ENTER-NEW-PASSWORD/COMPLETED-REQUEST\": {\n            return {...state, isRequestSuccess: action.isRequestSuccess}\n        }\n        case \"ENTER-NEW-PASSWORD/SET-BUTTON-DISABLED\": {\n            return {...state, isButtonDisabled: action.isButtonDisabled}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nconst completeRequest = (isRequestSuccess: boolean) => {\n    return ({\n        type: \"ENTER-NEW-PASSWORD/COMPLETED-REQUEST\",\n        isRequestSuccess\n    } as const)\n}\n\nconst setButtonDisabled = (isButtonDisabled: boolean) => {\n    return ({\n        type: \"ENTER-NEW-PASSWORD/SET-BUTTON-DISABLED\",\n        isButtonDisabled\n    } as const)\n}\n\nexport const setNewPassword = (password: string, token: string) => {\n    return async (dispatch: ThunkDispatch) => {\n        dispatch(setButtonDisabled(true))\n        try {\n            await authAPI.setNewPassword(password, token);\n            dispatch(completeRequest(true));\n        }\n        catch (e:any) {\n            dispatch(completeRequest(false));\n            const error = e.response ? e.response.data.error : \"Some unknown mistake\";\n            console.log(error)\n        }\n        finally {\n            dispatch(setButtonDisabled(false))\n        }\n    }\n}","import React from 'react'\nimport style from './EnterNewPassword.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../bll/store\";\nimport {useFormik} from \"formik\";\nimport {restorePassword} from \"../../bll/restorePasswordReducer\";\nimport {setNewPassword} from \"../../bll/enterNewPasswordReducer\";\nimport {Redirect, useParams} from \"react-router-dom\";\n\ntype FormikErrorType = {\n    password?: string\n}\n\nfunction EnterNewPassword() {\n\n    const dispatch = useDispatch();\n    const isRequestSuccess = useSelector<AppStoreType, boolean>(state => state.enterNewPassword.isRequestSuccess);\n    const isButtonDisabled = useSelector<AppStoreType, boolean>(state => state.enterNewPassword.isButtonDisabled);\n    const {token} = useParams<{ token: string }>()\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.password) {\n                errors.password = \"Field is required\";\n            } else if (values.password.length < 7) {\n                errors.password = \"Password must be more than 8 symbols\"\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            dispatch(setNewPassword(values.password, token))\n            console.log(token)\n            formik.resetForm();\n        }\n    })\n\n    if (isRequestSuccess) {\n        return (\n            <Redirect to={'/login'}/>\n        )\n    } else {\n        return (\n            <div>\n                <div>Enter new password</div>\n                <form onSubmit={formik.handleSubmit}>\n                    <div>\n                        <input id={\"password\"} name={\"password\"} type={\"password\"} placeholder={\"Password\"}\n                               onChange={formik.handleChange} onBlur={formik.handleBlur}\n                               value={formik.values.password}/>\n                        {formik.errors.password && formik.touched.password ? <div>{formik.errors.password}</div> : null}\n                    </div>\n                    <button type={\"submit\"} disabled={isButtonDisabled}>Send</button>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default EnterNewPassword;","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../dal/api\";\n\ntype ThunkDispatch = Dispatch<ActionsLoginType>\ntype InitialStateType = typeof initialState;\n\ntype SetIsLoggedInType = ReturnType<typeof setIsLoggedIn>\ntype SetButtonDisabledType = ReturnType<typeof setButtonDisabled>\ntype ActionsLoginType = SetIsLoggedInType | SetButtonDisabledType\n\n\n\n\nconst initialState = {\n    isLoggedIn: false,\n    isButtonDisabled: false\n};\n\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsLoginType): InitialStateType =>{\n    switch (action.type) {\n        case \"LOGIN/SET-IS-LOGGED-IN\": {\n            return {...state, isLoggedIn: action.isLoggedIn}\n        }\n        case \"LOGIN/SET-BUTTON-DISABLED\":\n            return {...state, isButtonDisabled: action.isButtonDisabled}\n\n        default: {\n            return state\n        }\n    }\n}\n\nconst setIsLoggedIn = (isLoggedIn: boolean) => {\n    return ({\n        type: \"LOGIN/SET-IS-LOGGED-IN\",\n        isLoggedIn\n    } as const)\n}\n\nconst setButtonDisabled = (isButtonDisabled: boolean) => {\n    return ({\n        type: \"LOGIN/SET-BUTTON-DISABLED\",\n        isButtonDisabled\n    } as const)\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean) => {\n    return (dispatch: ThunkDispatch) => {\n        dispatch(setButtonDisabled(true));\n        authAPI.login(email, password, rememberMe)\n            .then(res => {\n            dispatch(setIsLoggedIn(true))\n\n        })\n            .catch(e => {\n                const error = e.response ? e.response.data.error : \"Some unknown mistake\";\n                console.log(error)\n            }\n            )\n        setButtonDisabled(false)\n    }\n}\n\nexport const logout = () => {\n    return async (dispatch: ThunkDispatch) => {\n        try {\n            await authAPI.logout();\n            dispatch(setIsLoggedIn(false))\n        }\n        catch (e: any)  {\n            const error = e.response ? e.response.data.error : \"Some unknown mistake\";\n            console.log(error)\n        }\n\n    }\n}\n","import React from 'react'\nimport style from './Login.module.css'\nimport {useFormik} from \"formik\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../bll/store\";\nimport {login} from \"../../bll/loginReducer\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {PATH} from \"../routes/Routes\";\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    rememberMe?: boolean\n}\n\n\nfunction Login() {\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\n    const isButtonDisabled = useSelector<AppStoreType, boolean>(state => state.login.isButtonDisabled)\n\n    const formik = useFormik({\n        initialValues: {\n            email: 'olga_gladkova@tut.by',\n            password: 'trener28',\n            rememberMe: false\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = \"Field is required\";\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = \"Invalid e-mail address\";\n            }\n            if (!values.password) {\n                errors.password = \"Field is required\";\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            dispatch(login(values.email, values.password, values.rememberMe))\n            formik.resetForm();\n        }\n    })\n    if (isLoggedIn) {\n        return (\n            <Redirect to={'/profile'}/>\n        )\n    }\n\n    return (\n        <div className={style.loginBlock}>\n            <div>Sign in</div>\n            <form onSubmit={formik.handleSubmit}>\n                <div>\n                    <input\n                        id={\"email\"} name={\"email\"} type={\"text\"} placeholder={\"E-mail\"}\n                        onChange={formik.handleChange} value={formik.values.email} onBlur={formik.handleBlur}/>\n                    {formik.errors.email && formik.touched.email ? <div>{formik.errors.email}</div> : null}\n                </div>\n                <div>\n                    <input id={\"password\"} name={\"password\"} type={\"password\"} placeholder={\"Password\"}\n                           onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.password}/>\n                    {formik.errors.password && formik.touched.password ? <div>{formik.errors.password}</div> : null}\n                </div>\n                <div>\n                    <input id={\"rememberMe\"} name={\"rememberMe\"} type={\"checkbox\"} onChange={formik.handleChange}\n                    /> <label>remember me</label>\n                </div>\n                <button type={\"submit\"} disabled={isButtonDisabled}>Sign in</button>\n            </form>\n            <div >\n                <NavLink to={PATH.SIGN_UP} >Sign Up</NavLink>\n            </div>\n            <div >\n                <NavLink to={PATH.RESTORE_PASSWORD}>Forgot your password?</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react'\nimport style from './Profile.module.css'\n\nfunction Profile() {\n    return (\n        <div className={style.ProfileBlock}>\n            Profile\n        </div>\n    )\n}\n\nexport default Profile;","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../dal/api\";\n\ntype InitialStateType = typeof initialState;\ntype ThunkDispatch = Dispatch<ActionsSignUpType>\n\ntype SignUpSuccessType = ReturnType<typeof signUpSuccess>\ntype SetButtonDisabledType = ReturnType<typeof setButtonDisabled>\ntype ActionsSignUpType = SignUpSuccessType | SetButtonDisabledType\n\nconst initialState = {\n    isSignedUp: false,\n    isButtonDisabled: false\n};\n\nexport const signUpReducer = (state: InitialStateType = initialState, action: ActionsSignUpType): InitialStateType => {\n    switch (action.type) {\n        case \"SIGN-UP/SIGNED-UP-SUCCESS\": {\n            return {...state, isSignedUp: action.isSignedUp}\n        }\n        case \"SIGN-UP/SET-BUTTON-DISABLED\": {\n            return {...state, isButtonDisabled: action.isButtonDisabled}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nconst signUpSuccess = (isSignedUp: boolean) => {\n    return ({\n        type: \"SIGN-UP/SIGNED-UP-SUCCESS\",\n        isSignedUp\n    } as const)\n}\n\nconst setButtonDisabled = (isButtonDisabled: boolean) => {\n    return ({\n        type: \"SIGN-UP/SET-BUTTON-DISABLED\",\n        isButtonDisabled\n    } as const)\n}\n\nexport const signUp = (email: string, password: string) => {\n    return (dispatch: ThunkDispatch) => {\n        dispatch(setButtonDisabled(true));\n        authAPI.signUp(email, password)\n            .then(res => {\n                dispatch(signUpSuccess(true))\n            })\n            .catch( e => {\n                const error = e.response ? e.response.data.error : \"Some unknown mistake\";\n                console.log(error)\n                dispatch(signUpSuccess(false))\n            })\n            .finally(() => dispatch(setButtonDisabled(false)))\n\n\n\n    }\n\n}","import React from 'react'\nimport style from './SignUp.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../bll/store\";\nimport {useFormik} from \"formik\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {PATH} from \"../routes/Routes\";\nimport {signUp} from \"../../bll/signUpReducer\";\n\ntype FormikErrorType = {\n    email?: string\n    password?: string\n    rememberMe?: boolean\n}\n\nfunction SignUp() {\n    const dispatch = useDispatch()\n    const isSignedUp = useSelector<AppStoreType, boolean>(state => state.signUp.isSignedUp)\n    const isButtonDisabled = useSelector<AppStoreType, boolean>(state => state.signUp.isButtonDisabled)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = \"Field is required\";\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = \"Invalid e-mail address\";\n            }\n            if (!values.password) {\n                errors.password = \"Field is required\";\n            } else if (values.password.length < 7) {\n                errors.password = \"Password must be more than 8 symbols\"\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            dispatch(signUp(values.email, values.password))\n            formik.resetForm();\n        }\n    })\n    if (isSignedUp) {\n        return (\n            <Redirect to={'/login'}/>\n        )\n    }\n\n    return (\n        <div className={style.signUpContainer}>\n            <div>Sign up</div>\n            <form onSubmit={formik.handleSubmit}>\n                <div>\n                    <input\n                        id={\"email\"} name={\"email\"} type={\"text\"} placeholder={\"E-mail\"}\n                        onChange={formik.handleChange} value={formik.values.email} onBlur={formik.handleBlur}/>\n                    {formik.errors.email && formik.touched.email ? <div>{formik.errors.email}</div> : null}\n                </div>\n                <div>\n                    <input id={\"password\"} name={\"password\"} type={\"password\"} placeholder={\"Password\"}\n                           onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.password}/>\n                    {formik.errors.password && formik.touched.password ? <div>{formik.errors.password}</div> : null}\n                </div>\n                <button type={\"submit\"} disabled={isButtonDisabled}>Sign up</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUp;","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../dal/api\";\n\ntype InitialStateType = typeof initialState;\ntype ThunkDispatch = Dispatch<ActionsRestorePasswordType>\n\ntype CompleteRequestType = ReturnType<typeof completeRequest>\ntype SetButtonDisabled = ReturnType<typeof setButtonDisabled>\ntype ActionsRestorePasswordType =  CompleteRequestType | SetButtonDisabled\n\nconst initialState = {\n    isRequestSuccess: false,\n    isButtonDisabled: false\n};\n\nexport const restorePasswordReducer =\n    (state: InitialStateType = initialState, action: ActionsRestorePasswordType): InitialStateType => {\n    switch (action.type) {\n        case \"RESTORE-PASSWORD/COMPLETED-REQUEST\": {\n            return {...state, isRequestSuccess: action.isRequestSuccess}\n        }\n        case \"RESTORE-PASSWORD/SET-BUTTON-DISABLED\": {\n            return {...state, isButtonDisabled: action.isButtonDisabled}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nconst completeRequest = (isRequestSuccess: boolean) => {\n    return ({\n        type: \"RESTORE-PASSWORD/COMPLETED-REQUEST\",\n        isRequestSuccess\n    } as const)\n}\n\nconst setButtonDisabled = (isButtonDisabled: boolean) => {\n    return ({\n        type: \"RESTORE-PASSWORD/SET-BUTTON-DISABLED\",\n        isButtonDisabled\n    } as const)\n}\n\nexport const restorePassword = (email: string) => {\n    return async (dispatch: ThunkDispatch) => {\n        dispatch(setButtonDisabled(true))\n        try {\n            await authAPI.restorePassword(email);\n            dispatch(completeRequest(true));\n        }\n        catch (e:any) {\n            dispatch(completeRequest(false));\n            const error = e.response ? e.response.data.error : \"Some unknown mistake\";\n            console.log(error)\n        }\n        finally {\n            dispatch(setButtonDisabled(false))\n        }\n    }\n}\n","import React from 'react'\nimport style from './RestorePassword.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../bll/store\";\nimport {useFormik} from \"formik\";\nimport {restorePassword} from \"../../bll/restorePasswordReducer\";\n\ntype FormikErrorType = {\n    email?: string\n}\n\nfunction RestorePassword() {\n    const dispatch = useDispatch();\n    const isRequestSuccess = useSelector<AppStoreType, boolean>(state => state.restorePassword.isRequestSuccess);\n    const isButtonDisabled = useSelector<AppStoreType, boolean>(state => state.restorePassword.isButtonDisabled);\n\n    const formik = useFormik({\n        initialValues: {\n            email: 'olga_gladkova@tut.by',\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = \"Field is required\";\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = \"Invalid e-mail address\";\n            }\n            return errors;\n        },\n        onSubmit: values => {\n            dispatch(restorePassword(values.email))\n            formik.resetForm();\n        }\n    })\n\n    if (isRequestSuccess) {\n        return (\n            <div>Check yor e-mail! We've sent instruction how to recover your password there.</div>\n        )\n    } else {\n        return (\n            <div>\n                <div>Restore password</div>\n                <form onSubmit={formik.handleSubmit}>\n                    <div>\n                        <input\n                            id={\"email\"} name={\"email\"} type={\"text\"} placeholder={\"E-mail\"}\n                            onChange={formik.handleChange} value={formik.values.email} onBlur={formik.handleBlur}/>\n                        {formik.errors.email && formik.touched.email ? <div>{formik.errors.email}</div> : null}\n                    </div>\n                    <button type={\"submit\"} disabled={isButtonDisabled}>Send</button>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default RestorePassword;","import React from 'react';\nimport style from \"./Button.module.css\"\n\ntype ButtonPropsType = {\n    buttonName: string\n}\n\nfunction Button(props: ButtonPropsType) {\n    const buttonHandler = () => {\n\n    }\n    return (\n        <button className={style.button}  onClick={buttonHandler}>\n            {props.buttonName}\n        </button>\n    )\n\n}\nexport default Button;","import React from 'react';\nimport style from \"./Input.module.css\"\n\ntype InputPropsType = {\n    inputName: string\n    placeholder: string\n}\n\nfunction Input(props: InputPropsType) {\n\n    return (\n        <input className={style.input} type={\"text\"} name={props.inputName} placeholder={props.placeholder}/>\n    )\n\n}\n\nexport default Input;","import React from 'react';\nimport style from \"./CheckBox.module.css\"\n\ntype CheckBoxPropsType = {\n    id: string\n    checkBoxLabel: string\n}\n\nfunction CheckBox(props: CheckBoxPropsType) {\n\n    return (\n        <div>\n            <input className={style.checkBox} type={\"checkbox\"} id={props.id}/>\n            <label className={style.label} htmlFor={props.id}>{props.checkBoxLabel}</label>\n        </div>\n\n    )\n\n}\n\nexport default CheckBox;","import React from 'react'\nimport Button from \"../common/button/Button\";\nimport style from './Test.module.css'\nimport Input from \"../common/input/Input\";\nimport CheckBox from \"../common/checkBox/CheckBox\";\n\n\nfunction Test() {\n    return (\n        <div className={style.testBlock}>\n            <div className={style.item}><Button buttonName={\"test\"}/> </div>\n            <div className={style.item}><Input inputName={\"input\"} placeholder={\"test\"}/></div>\n            <div className={style.item}><CheckBox checkBoxLabel={\"Test\"} id={\"test\"}/></div>\n\n\n        </div>\n    )\n}\n\nexport default Test;","import React from 'react'\nimport style from './Error404.module.css'\n\n\nfunction Error404() {\n    return (\n        <div className={style.error404Page}>\n            <div>404</div>\n            <div>Page not found!</div>\n        </div>\n    )\n}\n\nexport default Error404","import React from 'react'\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport EnterNewPassword from \"../enterNewPassword/EnterNewPassword\";\nimport Login from \"../login/Login\";\nimport Profile from \"../profile/Profile\";\nimport SignUp from \"../signUp/SignUp\";\nimport RestorePassword from \"../restorePassword/RestorePassword\";\nimport Test from \"../test/Test\";\nimport Error404 from \"../error404/Error404\";\n\nexport const PATH = {\n    ENTER_NEW_PASSWORD: '/enter-new-password',\n    LOGIN: '/login',\n    PROFILE: '/profile',\n    SIGN_UP: '/sign-up',\n    RESTORE_PASSWORD: '/restore-password',\n    TEST: '/test',\n}\n\nfunction Routes() {\n    return (\n        <div>\n            <Switch>\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\n                <Route path={PATH.ENTER_NEW_PASSWORD} render={() => <EnterNewPassword/>}/>\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\n                <Route path={PATH.SIGN_UP} render={() => <SignUp/>}/>\n                <Route path={PATH.RESTORE_PASSWORD} render={() => <RestorePassword/>}/>\n                <Route path={PATH.TEST} render={() => <Test/>}/>\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes;","import React from 'react'\nimport {NavLink, useHistory} from 'react-router-dom'\nimport style from './Header.module.css'\nimport {PATH} from \"../routes/Routes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../bll/store\";\nimport {logout} from \"../../bll/loginReducer\";\n\nfunction Header() {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\n    const history = useHistory()\n    const onCLickLogoutHandler = () => {\n        dispatch(logout());\n        // history.push('/login')\n\n    }\n    return (\n        <div className={style.headerBlock}>\n            <nav className={style.nav}>\n                {!isLoggedIn && <div className = {style.item}>\n                    <NavLink to={PATH.LOGIN} activeClassName={style.activeLink}>Log In</NavLink>\n                </div>}\n                {!isLoggedIn && <div className = {style.item}>\n                    <NavLink to={PATH.SIGN_UP} activeClassName={style.activeLink}>Sign Up</NavLink>\n                </div>}\n                {isLoggedIn && <div className = {style.item}>\n                    <NavLink to={PATH.PROFILE} activeClassName={style.activeLink}>Profile</NavLink>\n                </div>}\n                {/*<div className = {style.item}>*/}\n                {/*    <NavLink to={PATH.RESTORE_PASSWORD} activeClassName={style.activeLink}>Restore password</NavLink>*/}\n                {/*</div>*/}\n                {/*<div className = {style.item}>*/}\n                {/*    <NavLink to={PATH.ENTER_NEW_PASSWORD} activeClassName={style.activeLink}>Enter new password</NavLink>*/}\n                {/*</div>*/}\n                {/*<div className = {style.item}>*/}\n                {/*    <NavLink to={PATH.TEST} activeClassName={style.activeLink}>Test</NavLink>*/}\n                {/*</div>*/}\n                {isLoggedIn && <button onClick={onCLickLogoutHandler}>Log out</button>}\n\n\n            </nav>\n        </div>\n    )\n\n}\n\nexport default Header","\ntype InitialStateType = typeof initialState;\ntype ActionsType = {\n    type: string\n}\n\nconst initialState = {\n\n};\n\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType =>{\n    switch (action.type) {\n        case \"\": {\n            return state\n        }\n        default: {\n            return state\n        }\n    }\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {loginReducer} from \"./loginReducer\";\nimport {enterNewPasswordReducer} from \"./enterNewPasswordReducer\";\nimport {profileReducer} from \"./profileReducer\";\nimport {restorePasswordReducer} from \"./restorePasswordReducer\";\nimport {signUpReducer} from \"./signUpReducer\";\nimport thunkMiddleware from \"redux-thunk\";\n\n\nconst reducers = combineReducers({\n    login: loginReducer,\n    enterNewPassword: enterNewPasswordReducer,\n    profile: profileReducer,\n    restorePassword: restorePasswordReducer,\n    signUp: signUpReducer\n})\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev","import React from 'react';\nimport './App.css';\nimport Header from \"./components/header/Header\";\nimport {HashRouter} from \"react-router-dom\";\nimport Routes from \"./components/routes/Routes\";\nimport {Provider} from \"react-redux\";\nimport store from \"./bll/store\";\n\nfunction App() {\n    return (\n        //hr, provider\n        <Provider store={store}>\n        <HashRouter>\n\n            <div className=\"App\">\n                <Header/>\n                <Routes/>\n            </div>\n        </HashRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}